execute pathogen#infect()
filetype plugin indent on

let mapleader = '\'

set laststatus=2

syntax enable
set encoding=utf-8
set ruler
set number
set nowrap
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=2
set autoread

set autoindent
set copyindent
set shiftround
set smarttab

set hlsearch
set incsearch
set ignorecase
set smartcase

set title
set scrolloff=3
set sidescrolloff=5
set showmatch
set showcmd

set noswapfile
set nobackup
set nowritebackup

set history=1000
set undolevels=1000
set visualbell
set noerrorbells

set t_Co=256

" set background=dark
set background=light

" option name default optional
let g:solarized_termcolors= 256
let g:solarized_termtrans = 1
let g:solarized_degrade = 0
let g:solarized_bold = 1
let g:solarized_underline = 1
let g:solarized_italic = 1
let g:solarized_contrast = "normal"
let g:solarized_visibility= "normal"

color desert
colorscheme solarized

" call togglebg#map("<F5>")

" NERDTree
map <Leader>n :NERDTreeToggle<CR>
" map <F8> :NERDTreeToggle<CR>
" map <F8> <plug>NERDTreeTabsToggle<CR>
let NERDTreeWinPos='left'

map <Leader><Leader> :ZoomWin<CR>

" Navigate between windows
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

if executable('ag')
  " let g:ackprg = 'ag --vimgrep'
  let g:ackprg = 'ag --nogroup --nocolor --column'
endif

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.git|doc|tmp|node_modules|bower_components)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ }

" Taglist                                                       "
map <F7> :TlistToggle<CR>
" Split to the right side of the screen
let g:Tlist_Use_Left_Window = 1
" Set the window width
let g:Tlist_WinWidth = 24
" Sort by the order
let g:Tlist_Sort_Type = "name"
" Do not display the help info
let g:Tlist_Compact_Format = 1
" If you are the last, kill yourself
let g:Tlist_Exit_OnlyWindow = 1
" Do not close tags for other files
let g:Tlist_File_Fold_Auto_Close = 1
" Do not show folding tree
let g:Tlist_Enable_Fold_Column = 0
" Always display one file tags
let g:Tlist_Show_One_File = 1

nnoremap ; :
nmap <silent> // :nohlsearch<CR>

map ;y "+y
map ;p "+p
map ;P "+P
map ;d "+d

map ;Y ggVG"+Y

nmap ;j :diffget LO<CR>
nmap ;k :diffget BA<CR>
nmap ;l :diffget RE<CR>

" Use Q for formatting the current paragraph (or selection)
vmap Q gq
nmap Q gqap

nmap <Leader>+ :set background=light<CR>
nmap <Leader>_ :set background=dark<CR>

au BufRead,BufNewFile *.thor set filetype=ruby
au BufRead,BufNewFile *.rabl setf ruby
au BufRead,BufNewFile *.hamlc set ft=haml

" let g:snipMate.scope_aliases['ruby'] = 'ruby,ruby-rails,myruby'
let g:snippets_dir = "~/.vim/snippets"

let g:EasyMotion_do_mapping = 0 " Disable default mappings
let g:EasyMotion_smartcase = 1 " Turn on case insensitive feature
nmap s <Plug>(easymotion-s2)

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

"let g:syntastic_coffee_checkers = ['coffeelint']

nmap <Leader>s :SyntasticToggleMode<CR>
